{"version":3,"sources":["components/Questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","App","useState","currentQuestion","setCurrentQuestion","showScore","setshowScore","score","setScore","questionNo","setQuestionNo","intervalRef","useRef","count","setCount","reset","clearInterval","current","nextQuestion","useEffect","setTimeout","prevCount","length","className","map","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec70e103.chunk.js","sourcesContent":["const questions = [\r\n    {\r\n      questionText: \"What is the capital of France?\",\r\n      answerOptions: [\r\n        { answerText: \"New York\", isCorrect: 2 },\r\n        { answerText: \"London\", isCorrect: 1 },\r\n        { answerText: \"Paris\", isCorrect: 10 },\r\n        { answerText: \"Dublin\", isCorrect: 3 },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"Who is CEO of Tesla?\",\r\n      answerOptions: [\r\n        { answerText: \"Jeff Bezos\", isCorrect: 1 },\r\n        { answerText: \"Elon Musk\", isCorrect: 10 },\r\n        { answerText: \"Bill Gates\", isCorrect: 2 },\r\n        { answerText: \"Tony Stark\", isCorrect: 3 },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: 10 },\r\n        { answerText: \"Intel\", isCorrect: 2 },\r\n        { answerText: \"Amazon\", isCorrect: 1 },\r\n        { answerText: \"Microsoft\", isCorrect: 2 },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"The iPhone was created by which company?\",\r\n      answerOptions: [\r\n        { answerText: \"Apple\", isCorrect: 10 },\r\n        { answerText: \"Intel\", isCorrect: 2 },\r\n        { answerText: \"Amazon\", isCorrect: 1 },\r\n        { answerText: \"Microsoft\", isCorrect: 2 },\r\n      ],\r\n    },\r\n    {\r\n      questionText: \"How many Harry Potter books are there?\",\r\n      answerOptions: [\r\n        { answerText: \"1\", isCorrect: 3 },\r\n        { answerText: \"4\", isCorrect: 1 },\r\n        { answerText: \"6\", isCorrect: 2 },\r\n        { answerText: \"7\", isCorrect: 10 },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  \r\n\r\n  export default questions;","import React, { useState, useEffect, useRef } from \"react\";\nimport questions from \"./components/Questions\";\n\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setshowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [questionNo, setQuestionNo] = useState(1);\n\n  const intervalRef = useRef();\n  const [count, setCount] = useState(5);\n\n  useEffect(() => {\n    if (count === 0) {\n      reset();\n    }\n    intervalRef.current = setTimeout(\n      () => setCount((prevCount) => (prevCount > 0 ? prevCount - 1 : 0)),\n      1000\n    );\n    return () => {\n      clearInterval(intervalRef.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [count]);\n\n  function reset() {\n    clearInterval(intervalRef.current);\n    nextQuestion();\n    setCount(5);\n  }\n\n  const nextQuestion = () => {\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setshowScore(true);\n    }\n    setQuestionNo(questionNo + 1);\n  };\n\n  const handleAnswerButtonClick = (isCorrect) => {\n    nextQuestion();\n    setQuestionNo(questionNo + 1);\n    let trustScore = score + isCorrect;\n    setScore(trustScore);\n  };\n\n  return (\n    <div className=\"app\">\n      {}\n      {showScore ? (\n        <div className=\"score-section\">\n          Your Trust Score is: {score} / {questions.length * 10}{\" \"}\n        </div>\n      ) : (\n        <>\n          <div className=\"timer\">{count}</div>\n          <div className=\"question-wrapper\">\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>Question {questionNo}</span>/{questions.length}\n              </div>\n              <div className=\"question-text\">\n                {questions[currentQuestion].questionText}\n              </div>\n            </div>\n            <div className=\"answer-section\">\n              {questions[currentQuestion].answerOptions.map((answerOptions) => (\n                <button\n                  onClick={() => {\n                    handleAnswerButtonClick(answerOptions.isCorrect);\n                    reset();\n                  }}\n                >\n                  {answerOptions.answerText}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div>{/* <button onClick={onClickResetButton}>Reset</button> */}</div>\n        </>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}